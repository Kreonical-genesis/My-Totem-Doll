plugins {
	id "dev.kikugie.stonecutter"
}
stonecutter.active "1.20.1" /* [SC] DO NOT EDIT */

stonecutter.registerChiseled tasks.register("chiseledBuildAndCollectAll", stonecutter.chiseled) {
	setGroup("project")
	ofTask("buildAndCollect")
}

stonecutter.registerChiseled tasks.register("chiseledPublishAll", stonecutter.chiseled) {
	setGroup("project")
	ofTask("publishMods")
}

stonecutter.registerChiseled tasks.register("chiseledPublishSpecified", stonecutter.chiseled) {
	def list = getPublicationVersions()
	versions = stonecutter.versions.findAll { list.contains(it.project) }
	setGroup("project")
	ofTask("publishMods")
}

for (ver in stonecutter.versions) {
	def v = ver
	stonecutter.registerChiseled tasks.register("chiseledBuildAndCollect+${v.project}", stonecutter.chiseled) {
		versions = [v]
		setGroup("project")
		ofTask("buildAndCollect")
	}

	stonecutter.registerChiseled tasks.register("chiseledPublish+${v.project}", stonecutter.chiseled) {
		versions = [v]
		setGroup("project")
		ofTask("publishMods")
	}
}

String[] getPublicationVersions() {
	return publication_versions.toString().split(" ").collect { s ->
		def index = s.indexOf("[")
		if (index == -1) {
			return s
		}
		return s.substring(0, index)
	}
}
